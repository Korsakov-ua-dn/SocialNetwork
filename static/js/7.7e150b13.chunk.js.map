{"version":3,"sources":["../node_modules/classnames/index.js","Components/Login/Login.module.css","Components/Login/Login.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","LoginForm","props","useForm","register","handleSubmit","errors","formState","className","s","form","onSubmit","data","login","email","password","rememberMe","captcha","e","console","log","item","required","type","checkbox","captchaUrl","cn","inputCaptcha","errorCaptcha","btnSubmit","captchaImg","src","alt","connect","state","auth","isAuth","to","loginWrapper","style","color","error"],"mappings":";kGAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,mBCNDkB,EAAOC,QAAU,CAAC,aAAe,4BAA4B,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,aAAe,4BAA4B,UAAY,yBAAyB,WAAa,4B,mLCoBtOE,EAA0C,SAACC,GACpD,MAAsDC,cAA/CC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAA0BC,EAA3C,EAA+BC,UAAYD,OAI3C,OACI,uBAAME,UAAWC,IAAEC,KAAMC,SAAUN,GAJO,SAAAO,GAAI,OAAIV,EAAMW,MAAMD,EAAKE,MAAOF,EAAKG,SAAUH,EAAKI,WAAYJ,EAAKK,YACnG,SAACX,EAAaY,GAAd,OAAyBC,QAAQC,IAAId,EAAQY,MAGzD,UACI,sBAAKV,UAAWC,IAAEY,KAAlB,UACI,+BAAO,UACP,qCAAYjB,EAAS,QAAS,CAACkB,UAAU,MACxChB,EAAOQ,OAAS,wDAErB,sBAAKN,UAAWC,IAAEY,KAAlB,UACI,+BAAO,aACP,mCAAOE,KAAM,YAAgBnB,EAAS,WAAY,CAACkB,UAAU,MAC5DhB,EAAOS,UAAY,2DAExB,sBAAKP,UAAWC,IAAEY,KAAlB,UACI,+BAAO,gBACP,mCAAOb,UAAWC,IAAEe,SAAUD,KAAM,YAAgBnB,EAAS,mBAEhEF,EAAMuB,YAAc,sBAAKjB,UAAWC,IAAEY,KAAlB,UACjB,+BAAO,qBACP,iDAAWjB,EAAS,UAAW,CAACkB,UAAU,KAA1C,IACOd,UAAWkB,IAAGjB,IAAEkB,aAAH,eAAmBlB,IAAEmB,aAAetB,EAAOW,gBAGnE,uBAAOT,UAAWC,IAAEoB,UAAWN,KAAK,WACnCrB,EAAMuB,YAAc,qBAAKjB,UAAWC,IAAEqB,WAAYC,IAAK7B,EAAMuB,WAAYO,IAAI,gBA2C3EC,uBAFS,SAACC,GAAD,MAA+C,CAACC,KAAMD,EAAMC,QAE5C,CAACtB,WAA1BoB,EAlB2C,SAAC/B,GACvD,OAAIA,EAAMiC,KAAKC,OAAe,cAAC,IAAD,CAAUC,GAAI,aAErC,sBAAK7B,UAAWC,IAAE6B,aAAlB,UACH,yCACA,cAACrC,EAAD,CAAWY,MAAOX,EAAMW,MAAOY,WAAYvB,EAAMiC,KAAKV,aACtD,qBAAKc,MAAO,CAACC,MAAO,OAApB,SAA+BtC,EAAMiC,KAAKM,MAAQvC,EAAMiC,KAAKM,MAAQ","file":"static/js/7.7e150b13.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__n-4KE\",\"form\":\"Login_form__2aK-t\",\"item\":\"Login_item__1J93y\",\"checkbox\":\"Login_checkbox__YMBNi\",\"errorCaptcha\":\"Login_errorCaptcha__quWFg\",\"btnSubmit\":\"Login_btnSubmit__1Z33Z\",\"captchaImg\":\"Login_captchaImg__1W79u\"};","import React from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {AuthType, login} from \"../../Redux/auth-reducer\"\r\nimport {AppStateType} from \"../../Redux/store\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\nimport s from './Login.module.css'\r\nimport cn from \"classnames\"\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n    captchaUrl: string | null\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormPropsType> = (props) => {\r\n    const {register, handleSubmit, formState: {errors}} = useForm<FormDataType>();\r\n    const onSubmit: SubmitHandler<FormDataType> = data => props.login(data.email, data.password, data.rememberMe, data.captcha)\r\n    const onError = (errors: any, e: any) => console.log(errors, e);\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <div className={s.item}>\r\n                <span>{\"email\"}</span>\r\n                <input  {...register(\"email\", {required: true})} />\r\n                {errors.email && <span>email is required</span>}\r\n            </div>\r\n            <div className={s.item}>\r\n                <span>{\"password\"}</span>\r\n                <input type={\"password\"} {...register(\"password\", {required: true})} />\r\n                {errors.password && <span>password is required</span>}\r\n            </div>\r\n            <div className={s.item}>\r\n                <span>{\"remember me\"}</span>\r\n                <input className={s.checkbox} type={\"checkbox\"} {...register(\"rememberMe\")} />\r\n            </div>\r\n            {props.captchaUrl && <div className={s.item}>\r\n                <span>{\"anti-bot symbols\"}</span>\r\n                <input {...register(\"captcha\", {required: true})}\r\n                       className={cn(s.inputCaptcha, {[s.errorCaptcha]: errors.captcha})}/>\r\n            </div>}\r\n\r\n            <input className={s.btnSubmit} type=\"submit\"/>\r\n            {props.captchaUrl && <img className={s.captchaImg} src={props.captchaUrl} alt=\"captcha\"/>}\r\n        </form>\r\n    );\r\n}\r\n\r\n// const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} action=\"\">\r\n//             <div>\r\n//                 <Field name={\"email\"} component={Input} validate={[required]} type=\"text\" placeholder={\"Login\"}/>\r\n//             </div>\r\n//             <div>\r\n//                 <Field name={\"password\"} component={Input} validate={[required]} type=\"password\" placeholder={\"Password\"}/>\r\n//             </div>\r\n//             <div>\r\n//                 <Field name={\"rememberMe\"} component={Input} type=\"checkbox\"/> remember me\r\n//             </div>\r\n//             <div>\r\n//                 <button>Login</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n// const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst LoginContainer: React.FC<LoginContainerPropsType> = (props) => {\r\n    if (props.auth.isAuth) return <Redirect to={\"/Profile\"}/>\r\n\r\n    return <div className={s.loginWrapper}>\r\n        <h1> Login </h1>\r\n        <LoginForm login={props.login} captchaUrl={props.auth.captchaUrl}/>\r\n        <div style={{color: \"red\"}}>{!!props.auth.error ? props.auth.error : null}</div>\r\n    </div>\r\n}\r\n\r\n// types\r\ntype mapStateToPropsType = { auth: AuthType }\r\ntype mapDispatchToPropsType = { login: (email: string, password: string, rememberMe: boolean, captcha: string) => void }\r\ntype LoginContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({auth: state.auth})\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer)"],"sourceRoot":""}
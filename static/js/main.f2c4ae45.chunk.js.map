{"version":3,"sources":["Redux/auth-reducer.ts","App.module.css","Components/Header/Header.module.css","Redux/profile-reducer.ts","assets/img/Spin-1s-200px.svg","Components/common/Preloader/Preloader.tsx","Redux/dialogs-reducer.ts","Redux/users-reducer.ts","Components/common/Preloader/Preloader.module.css","API/api.ts","Components/Nav/Nav.module.css","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Nav/Nav.tsx","Components/MainContent/News/News.tsx","Components/MainContent/Music/Music.tsx","Components/MainContent/Settings/Settings.tsx","Redux/app-reducer.ts","Redux/sidebar-reducer.ts","Redux/store.ts","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","id","email","login","isAuth","error","captchaUrl","setUserDataAC","type","payload","setError","setCaptchaUrl","getAuthUserData","dispatch","a","authApi","authMe","response","data","resultCode","message","password","rememberMe","captcha","res","getCaptchaUrl","messages","logout","securityApi","url","authReducer","state","action","module","exports","postsData","likesCount","profile","status","addPostAC","newPostText","setStatusAC","getUserProfile","userId","profileApi","getProfile","getUserStatus","getStatus","then","updateUserStatus","updateStatus","updateAvatar","photo","updatePhotos","setAvatarAC","photos","updateDescription","getState","auth","toString","Promise","reject","profileReducer","newPost","Date","getTime","filter","el","postId","Preloader","props","isFetching","className","s","preloaderImg","src","preloader","alt","dialogsData","name","messagesData","sendMessageAC","newMessageBody","dialogsReducer","users","currentPage","pageSize","totalCount","isFollowingProgress","followSuccess","unfollowSuccess","setUsersCurrentPageAC","toggleIsFetchingAC","toggleIsFollowingProgressAC","requestUsers","userApi","getUsers","items","console","log","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","usersReducer","map","u","followed","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","warn","put","formData","FormData","append","Header","header","to","loginBlock","onClick","HeaderContainer","this","React","Component","connect","Nav","nav","item","active","activeClassName","News","Music","Settings","isInit","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ThunkMiddleware","withSuspense","fallback","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","App","initializeApp","app_wrapper","app_wrapper_content","exact","path","render","component","style","display","AppContainer","withRouter","promise","all","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c4ae45.chunk.js","sourcesContent":["import {AppThunkTypes} from './store'\r\nimport {authApi, securityApi} from '../API/api'\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    error: '' as string,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nconst authReducer = (state: AuthType = initialState, action: AuthActionsType): AuthType => {\r\n    switch (action.type) {\r\n        case \"auth/SET_ERROR\":\r\n        case \"auth/SET_USER_DATA\":\r\n        case \"auth/SET_CAPTCHAURL\":\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setUserDataAC = (id: number | null, email: string| null, login: string| null, isAuth: boolean) => \r\n    ({type: \"auth/SET_USER_DATA\", payload: {id, email, login, isAuth}} as const)\r\nexport const setError = (error: string) => ({type: \"auth/SET_ERROR\", payload: {error}} as const)\r\nexport const setCaptchaUrl = (captchaUrl: string | null) => ({type: \"auth/SET_CAPTCHAURL\", payload: {captchaUrl}} as const)\r\n\r\n// thunks\r\nexport const getAuthUserData = (): AppThunkTypes => async dispatch => {\r\n    try {\r\n        const response = await authApi.authMe()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setUserDataAC(id, email, login, true))\r\n        }\r\n    } catch (e: any) {\r\n        dispatch(setError(e.message))\r\n    }\r\n} // асинхронная функция всегда автоматом возвращает промис!!!\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null): AppThunkTypes => async dispatch => {\r\n    try {\r\n        const res = await authApi.login(email, password, rememberMe, captcha)\r\n        if(res.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n            dispatch(setCaptchaUrl(null))\r\n            dispatch(setError(''))\r\n        } else {\r\n            if (res.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            dispatch(setError(res.data.messages[0]))\r\n        }\r\n    } catch (e: any) { \r\n        dispatch(setError(e.message))\r\n    }\r\n}\r\nexport const logout = (): AppThunkTypes => async dispatch => {\r\n    const res = await authApi.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserDataAC(null, null, null, false))\r\n    }\r\n}\r\nexport const getCaptchaUrl = (): AppThunkTypes => async dispatch => {\r\n    const res = await securityApi.getCaptchaUrl()\r\n    dispatch(setCaptchaUrl(res.data.url))    \r\n}\r\n\r\nexport const _login = (email: string, password: string, rememberMe: boolean, captcha: string | null): AppThunkTypes => dispatch => {\r\n    authApi.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                console.log(res)\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n} // Санка посттроенная на promise .then\r\nexport const _logout = (): AppThunkTypes => dispatch => {\r\n    authApi.logout()\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setUserDataAC(null, null, null, false))\r\n            }\r\n        })\r\n} // Санка посттроенная на promise .then\r\nexport const _getAuthUserData = (): AppThunkTypes => dispatch => {\r\n    return authApi.authMe()\r\n        .then(responce => {\r\n            if (responce.data.resultCode === 0) {\r\n                let {id, email, login} = responce.data.data\r\n                dispatch(setUserDataAC(id, email, login, true))\r\n            }\r\n        })\r\n} // Санка посттроенная на promise .then\r\n\r\n// types\r\nexport type AuthType = typeof initialState\r\n\r\nexport type AuthActionsType = ReturnType<typeof setUserDataAC> \r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setCaptchaUrl>\r\n    \r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper___SHeZ\",\"app_wrapper_content\":\"App_app_wrapper_content__2e7-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ZGuwn\",\"loginBlock\":\"Header_loginBlock__1xVvK\"};","import {Dispatch} from 'redux'\r\nimport {PhotosType, profileApi, ProfileType} from '../API/api'\r\nimport {AppStateType, AppThunkTypes} from \"./store\";\r\nimport {DescriptionDataType} from \"../Components/MainContent/Profile/ProfileInfo/UpdateDescriptionForm/UpdateDescriptionForm\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"Hey, how are your samurai way?\", likesCount: 13},\r\n        {id: 2, message: \"Do not lose hope!\", likesCount: 0}\r\n    ],\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case \"profile/ADD-POST\":\r\n            let newPost: PostDataType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [newPost, ...state.postsData],\r\n            }\r\n        case \"profile/SET_USER_PROFILE\":\r\n            return {...state, profile: action.profile}\r\n        case \"profile/SET_STATUS\":\r\n            return {...state, status: action.status}\r\n        case \"profile/DELETE_POST\":\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(el => el.id !== action.postId)\r\n            }\r\n        case \"profile/SET_AVATAR\":\r\n            return state.profile ? {...state, profile: {...state.profile, photos: action.photo}} : state\r\n        // проверка на null, иначе ошибка деструктуризации ...state.profile\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const addPostAC = (newPostText: string) => ({type: \"profile/ADD-POST\", newPostText} as const)\r\nexport const setUserProfileAC = (profile: ProfileType) => ({type: \"profile/SET_USER_PROFILE\", profile} as const)\r\nexport const setStatusAC = (status: string) => ({type: \"profile/SET_STATUS\", status} as const)\r\nexport const deletePostAC = (postId: number) => ({type: \"profile/DELETE_POST\", postId} as const)\r\nexport const setAvatarAC = (photo: PhotosType) => ({type: \"profile/SET_AVATAR\", photo} as const)\r\n\r\n// thunks\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.getProfile(userId)\r\n    dispatch(setUserProfileAC(response.data))\r\n}\r\nexport const getUserStatus = (userId: string) => (dispatch: Dispatch) => {\r\n    profileApi.getStatus(userId)\r\n        .then(res => {\r\n            dispatch(setStatusAC(res.data))\r\n        })\r\n}\r\nexport const updateUserStatus = (status: string) => (dispatch: Dispatch) => {\r\n    profileApi.updateStatus(status)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0)\r\n                dispatch(setStatusAC(status))\r\n        })\r\n}\r\nexport const updateAvatar = (photo: any) => (dispatch: Dispatch) => {\r\n    profileApi.updatePhotos(photo)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0)\r\n                dispatch(setAvatarAC(res.data.data.photos))\r\n        })\r\n}\r\nexport const updateDescription = (data: DescriptionDataType): AppThunkTypes => async (dispatch, getState: () => AppStateType) => {\r\n    const userId = getState().auth.id?.toString()\r\n    const res = await profileApi.updateDescription(data)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        if (userId) dispatch(getUserProfile(userId))\r\n    } else {\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n}\r\n\r\n// types\r\nexport type PostDataType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = typeof initialState\r\nexport type ProfileActionType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof setStatusAC>\r\n    | ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof setAvatarAC>\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/Spin-1s-200px.5c1f21c6.svg\";","import preloader from \"../../../assets/img/Spin-1s-200px.svg\"\r\nimport s from \"./Preloader.module.css\"\r\n\r\ntype PreloaderPropsType = {\r\n    isFetching: boolean\r\n}\r\n\r\nconst Preloader = (props: PreloaderPropsType) => {\r\n    return (\r\n        <div>\r\n            {props.isFetching ? <img className={s.preloaderImg} src={preloader} alt=\"spinner\"/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","export type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogPageType = typeof initialState\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Oleg'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Vadim'},\r\n        {id: 4, name: 'Konstantin'},\r\n        {id: 5, name: 'Stepan'}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are your Kamasutra?'},\r\n        {id: 3, message: 'Yo bro, is good'}\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nconst dialogsReducer = (state: DialogPageType = initialState, action: DialogsActionsType): DialogPageType => {\r\n    switch (action.type) {\r\n        case \"dialogs/SEND-MESSAGE\":\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const sendMessageAC = (newMessageBody: string) => ({type: \"dialogs/SEND-MESSAGE\", newMessageBody} as const)\r\n\r\n// types\r\ntype SendMessageActionType = ReturnType<typeof sendMessageAC>\r\nexport type DialogsActionsType = SendMessageActionType\r\n\r\nexport default dialogsReducer;","import {CommonType, userApi, UserDataType} from '../API/api'\r\nimport {Dispatch} from 'redux'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserDataType>,\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    isFetching: false,\r\n    isFollowingProgress: [] as number[],\r\n}\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: UsersActionType): UsersPageType => {\r\n    switch (action.type) {\r\n        case \"users/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id !== action.userId ? u : {...u, followed: true})\r\n            }\r\n        case \"users/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id !== action.userId ? u : {...u, followed: false})\r\n            }\r\n        case \"users/SET_USERS\":\r\n            return {...state, users: action.users}\r\n        case \"users/SET_USERS_CURRENT_PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"users/SET_TOTAL_COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"users/TOGGLE_IS_FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"users/TOGGLE_IS_FOLLOWING_PROGRESS\":\r\n            return {\r\n                ...state, isFollowingProgress:\r\n                    action.isFollowingProgress\r\n                        ? [...state.isFollowingProgress, action.userId]\r\n                        : state.isFollowingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions \r\nexport const followSuccess = (userId: number) => ({type: \"users/FOLLOW\", userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: \"users/UNFOLLOW\", userId} as const)\r\nexport const setUsersAC = (users: Array<UserDataType>) => ({type: \"users/SET_USERS\", users} as const)\r\nexport const setUsersCurrentPageAC = (currentPage: number) =>\r\n    ({type: \"users/SET_USERS_CURRENT_PAGE\", currentPage} as const)\r\nexport const setTotalCountAC = (totalCount: number) => ({type: \"users/SET_TOTAL_COUNT\", totalCount} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({type: \"users/TOGGLE_IS_FETCHING\", isFetching} as const)\r\nexport const toggleIsFollowingProgressAC = (isFollowingProgress: boolean, userId: number) =>\r\n    ({type: \"users/TOGGLE_IS_FOLLOWING_PROGRESS\", isFollowingProgress, userId} as const)\r\n\r\n// thunks    \r\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(setUsersCurrentPageAC(currentPage))\r\n    dispatch(toggleIsFetchingAC(true))\r\n    try {\r\n        const data = await userApi.getUsers(currentPage, pageSize)\r\n        if (!data.error) {\r\n            dispatch(setUsersAC(data.items))\r\n            dispatch(setTotalCountAC(data.totalCount))\r\n        }\r\n    } catch (e: any) {\r\n        console.log(\"Something went wrong\")\r\n    } finally {\r\n        dispatch(toggleIsFetchingAC(false))\r\n    }\r\n}\r\nexport const followUnfollowFlow =\r\n    async (dispatch: Dispatch, userId: number, apiMethod: (id: number) => Promise<CommonType>, actionCreator: any) => {\r\n\r\n        dispatch(toggleIsFollowingProgressAC(true, userId))\r\n        const data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgressAC(false, userId))\r\n    }\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userApi.follow.bind(userApi), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, userApi.unfollow.bind(userApi), unfollowSuccess)\r\n    }\r\n}\r\nexport const _unfollow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFollowingProgressAC(true, userId))\r\n        userApi.unfollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgressAC(false, userId))\r\n            })\r\n    }\r\n} // осталось на память после рефакторинга дублирования кода\r\n\r\n//types\r\nexport type UsersPageType = typeof initialState\r\n\r\nexport type UsersActionType = ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setUsersCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof toggleIsFetchingAC>\r\n    | ReturnType<typeof toggleIsFollowingProgressAC>\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderImg\":\"Preloader_preloaderImg__303Jw\"};","import axios from 'axios'\r\nimport {DescriptionDataType} from \"../Components/MainContent/Profile/ProfileInfo/UpdateDescriptionForm/UpdateDescriptionForm\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        'API-KEY': '7310af47-87fb-4f01-ab93-b6fcc5cb60c0'\r\n    },\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<CommonType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<CommonType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId: string) {\r\n        console.warn(\"Please use profileApi to make this request\");\r\n        return profileApi.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`/profile/status`, {\"status\": status})\r\n    },\r\n    updatePhotos(photos: any) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photos)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateDescription(data: DescriptionDataType) {\r\n        return instance.put(`/profile`, {...data})\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    authMe() {\r\n        return instance.get<CommonType<{ id: number, login: string, email: string }>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<CommonType<{ userId: number }>>(`/auth/login`, {\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"rememberMe\": rememberMe,\r\n            \"captcha\": captcha\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonType>(`/auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instance.get<{ url: string }>(`/security/get-captcha-url`)\r\n    },\r\n}\r\n\r\n// types\r\nexport type CommonType<T = {}> = {\r\n    data: T\r\n    messages: Array<string>\r\n    fieldsErrors: []\r\n    resultCode: number\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserDataType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    uniqueUrlName: null\r\n}\r\ntype GetUsersType = {\r\n    error: null | string\r\n    items: UserDataType[]\r\n    totalCount: number\r\n}\r\nexport type ContactType = {\r\n    facebook: string | null\r\n    github: string | null\r\n    instagram: string | null\r\n    mainLink: string | null\r\n    twitter: string | null\r\n    vk: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string | null\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__H73gl\",\"item\":\"Nav_item__2zKh5\",\"active\":\"Nav_active__3IXaV\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {HeaderContainerPropsType} from './HeaderContainer'\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <NavLink to={'/'}>\r\n                <img\r\n                    src=\"https://res.cloudinary.com/teepublic/image/private/s--iRHIjqP9--/t_Preview/b_rgb:191919,c_limit,f_auto,h_630,q_90,w_630/v1463168513/production/designs/511305_1.jpg\"\r\n                    alt=\"\"\r\n                />\r\n            </NavLink>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.auth.isAuth\r\n                        ? <div>{props.auth.login} - <button onClick={props.logout}>Log out</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Header from './Header'\r\nimport {logout, AuthType} from '../../Redux/auth-reducer'\r\nimport {AppStateType} from '../../Redux/store'\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {auth: AuthType}\r\ntype mapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\nexport type HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({auth: state.auth})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            NEWS\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import { AppThunkTypes } from './store'\r\nimport { getAuthUserData } from './auth-reducer'\r\n\r\nlet initialState = {\r\n    isInit: false\r\n}\r\n\r\nconst appReducer = (state: AppType = initialState, action: AppActionsType): AppType => {\r\n    switch (action.type) {\r\n        case \"app/SUCCESS_INIT\":\r\n            return {...state, isInit: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const successInit = () => ({type: \"app/SUCCESS_INIT\"} as const)\r\n\r\n// thunks\r\nexport const initializeApp = (): AppThunkTypes => dispatch => {\r\n        let promise = dispatch(getAuthUserData()) // dispatch thunk return promis\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(successInit())\r\n            })\r\n}\r\n\r\n// types\r\nexport type AppType = typeof initialState\r\n\r\ntype SuccessInit = ReturnType<typeof successInit>\r\n\r\nexport type AppActionsType = SuccessInit\r\n\r\nexport default appReducer","import {RootAppActionsType} from \"./store\";\r\n\r\ntype SidebarPageType = typeof initialState\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarPageType = initialState, action: RootAppActionsType): SidebarPageType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from 'redux'\r\nimport profileReducer, {ProfileActionType} from './profile-reducer'\r\nimport dialogsReducer, {DialogsActionsType} from './dialogs-reducer'\r\nimport usersReducer, {UsersActionType} from './users-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport authReducer, {AuthActionsType} from './auth-reducer'\r\nimport appReducer, {AppActionsType} from './app-reducer'\r\nimport ThunkMiddleware from 'redux-thunk'\r\n// import { reducer as formReducer } from 'redux-form'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    // form: formReducer, // redux-form state\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(ThunkMiddleware)\r\n)); // для Redux DevTools\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(ThunkMiddleware)) // без Redux DevTools\r\n\r\n// const appActions = {setUserDataAC, stopSubmit}\r\n// type PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\n// export type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesTypes<T>>\r\n// export type AppActionTypes = InferActionTypes<typeof appActions>\r\n\r\n\r\n// types \r\nexport type AppStoreType = typeof store\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type RootAppActionsType = AuthActionsType | DialogsActionsType | ProfileActionType | UsersActionType | AppActionsType\r\n\r\nexport type AppThunkTypes<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppStateType,\r\n    unknown,  \r\n    RootAppActionsType\r\n>\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React, {Suspense} from 'react'\r\n\r\nexport function withSuspense(Component: React.ComponentType) {\r\n\r\n    return <Suspense fallback={<div>Загрузка...</div>}>\r\n        <Component/>\r\n    </Suspense>\r\n}\r\n\r\n// export function withSuspense <WCP>(Component: React.ComponentType<WCP>) {\r\n\r\n//     return (props: WCP) => <Suspense fallback={<div>Загрузка...</div>}>\r\n//         <Component {...props} />\r\n//     </Suspense>\r\n// } // дополнительно прокидываем пропсы","import React, {Suspense} from 'react'\r\nimport s from './App.module.css'\r\nimport HeaderContainer from './Components/Header/HeaderContainer'\r\nimport Nav from './Components/Nav/Nav'\r\nimport {HashRouter as Router, Route, withRouter, Switch, Redirect} from 'react-router-dom'\r\nimport News from './Components/MainContent/News/News'\r\nimport Music from './Components/MainContent/Music/Music'\r\nimport Settings from './Components/MainContent/Settings/Settings'\r\nimport {connect, Provider} from 'react-redux'\r\nimport {initializeApp} from './Redux/app-reducer'\r\nimport store, {AppStateType} from './Redux/store'\r\nimport {withSuspense} from './hoc/withSuspense'\r\nimport {compose} from 'redux'\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\n\r\n// const ProfileContainer = withSuspense(React.lazy(() => import('./Components/MainContent/Profile/ProfileContainer')))\r\n// ленивая загрузка + пропсы прокидываем в компоненту в render () => <ProfileContainer/>\r\n\r\nconst ProfileContainer = React.lazy(() => import('./Components/MainContent/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./Components/MainContent/Dialog/DialogsContainer'))\r\nconst UsersContainer = React.lazy(() => import('./Components/MainContent/Users/UsersContainer'))\r\nconst LoginContainer = React.lazy(() => import('./Components/Login/Login'))\r\n\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <HeaderContainer/>\r\n                <div className={s.app_wrapper}>\r\n                    <Nav/>\r\n                    <div className={s.app_wrapper_content}>\r\n                        <Switch>\r\n                            <Route exact path='/' render={() => <Redirect to=\"/profile\"/>}/>\r\n                            <Route path='/profile/:userId?' render={() => withSuspense(ProfileContainer)}/>\r\n                            <Route path='/dialogs' render={() => withSuspense(DialogsContainer)}/>\r\n                            <Route path='/users'\r\n                                   render={() => <Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                       <UsersContainer/>\r\n                                   </Suspense>}/>\r\n                            <Route path='/news' component={News}/>\r\n                            <Route path='/music' component={Music}/>\r\n                            <Route path='/settings' component={Settings}/>\r\n                            <Route path='/login' render={() => withSuspense(LoginContainer)}/>\r\n                            <Route path='*' render={() => <div>404 not found</div>}/>\r\n                        </Switch>\r\n                    </div>\r\n                    <div style={{display: \"none\"}}>learn react</div>\r\n                    {/* need for App.test */}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype mapDispatchToPropsType = { initializeApp: () => void }\r\ntype mapStateToPropsType = { isInit: boolean }\r\ntype AppPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({isInit: state.app.isInit})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nconst SamuraiJSApp = () => {\r\n    return (\r\n        <Router>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </Router>\r\n    )\r\n} // для App.test\r\n\r\nexport default SamuraiJSApp","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SamuraiJSApp from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <SamuraiJSApp />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
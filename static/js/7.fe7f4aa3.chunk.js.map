{"version":3,"sources":["Components/Login/Login.tsx"],"names":["LoginForm","props","useForm","register","handleSubmit","errors","formState","onSubmit","data","login","email","password","rememberMe","e","console","log","required","type","connect","state","auth","isAuth","to","error","length"],"mappings":"wNAiBaA,EAA0C,SAACC,GACpD,MAA0DC,cAAlDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAI7C,OACI,uBAAME,SAAUH,GAJ0B,SAAAI,GAAI,OAAIP,EAAMQ,MAAMD,EAAKE,MAAOF,EAAKG,SAAUH,EAAKI,eAClF,SAACP,EAAaQ,GAAd,OAAyBC,QAAQC,IAAIV,EAAQQ,MAGzD,UACI,gCACI,gCAAQ,UACR,qCAAYV,EAAS,QAAS,CAAEa,UAAU,MACzCX,EAAOK,OAAS,wDAGrB,gCACI,gCAAQ,aACR,mCAAOO,KAAM,YAAgBd,EAAS,WAAY,CAAEa,UAAU,MAC7DX,EAAOM,UAAY,2DAGxB,gCACI,gCAAQ,gBACR,mCAAOM,KAAM,YAAgBd,EAAS,mBAI1C,uBAAOc,KAAK,eA+CTC,uBAFS,SAACC,GAAD,MAA+C,CAACC,KAAMD,EAAMC,QAE5C,CAACX,WAA1BS,EArB2C,SAACjB,GAEvD,OAAGA,EAAMmB,KAAKC,OAAe,cAAC,IAAD,CAAUC,GAAI,cAC3CR,QAAQC,IAAId,EAAMmB,KAAKG,OAGhB,gCACH,8BAAMtB,EAAMmB,KAAKG,MAAMC,OAASvB,EAAMmB,KAAKG,MAAO,OAClD,yCACA,cAACvB,EAAD,CAAWS,MAAOR,EAAMQ","file":"static/js/7.fe7f4aa3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AuthType, login} from \"../../Redux/auth-reducer\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginFormPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormPropsType> = (props) => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm<FormDataType>();\r\n    const onSubmit: SubmitHandler<FormDataType> = data => props.login(data.email, data.password, data.rememberMe)\r\n    const onError = (errors: any, e: any) => console.log(errors, e);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <div>\r\n                <label>{\"email\"}</label>\r\n                <input  {...register(\"email\", { required: true })} />\r\n                {errors.email && <span>email is required</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>{\"password\"}</label>\r\n                <input type={\"password\"} {...register(\"password\", { required: true })} />\r\n                {errors.password && <span>password is required</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>{\"remember me\"}</label>\r\n                <input type={\"checkbox\"} {...register(\"rememberMe\")} />\r\n            </div>\r\n            \r\n            \r\n            <input type=\"submit\" />\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n// const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} action=\"\">\r\n//             <div>\r\n//                 <Field name={\"email\"} component={Input} validate={[required]} type=\"text\" placeholder={\"Login\"}/>\r\n//             </div>\r\n//             <div>\r\n//                 <Field name={\"password\"} component={Input} validate={[required]} type=\"password\" placeholder={\"Password\"}/>\r\n//             </div>\r\n//             <div>\r\n//                 <Field name={\"rememberMe\"} component={Input} type=\"checkbox\"/> remember me\r\n//             </div>\r\n//             <div>\r\n//                 <button>Login</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n// const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst LoginContainer: React.FC<LoginContainerPropsType> = (props) => {\r\n\r\n    if(props.auth.isAuth) return <Redirect to={\"/Profile\"}/>\r\n    console.log(props.auth.error);\r\n    \r\n\r\n    return <div>\r\n        <div>{props.auth.error.length ? props.auth.error: null}</div>\r\n        <h1> Login </h1>\r\n        <LoginForm login={props.login}/>\r\n    </div>\r\n}\r\n\r\n// types\r\ntype mapStateToPropsType = {auth: AuthType}\r\ntype mapDispatchToPropsType = {login: (email: string, password: string, rememberMe: boolean) => void}\r\ntype LoginContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({auth: state.auth})\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer)"],"sourceRoot":""}
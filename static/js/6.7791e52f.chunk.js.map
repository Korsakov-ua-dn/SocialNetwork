{"version":3,"sources":["Components/MainContent/Dialog/Dialogs.module.css","assets/img/null-avatar-icon.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/MainContent/Dialog/DialogItem/DialogItem.tsx","Components/MainContent/Dialog/Message/Message.tsx","Components/MainContent/Dialog/Dialogs.tsx","hoc/withAuthRedirect.tsx","Components/MainContent/Dialog/DialogsContainer.tsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","DialogItem","props","path","id","className","s","dialog","active","avatar","src","alt","to","name","Message","message","DialogsForm","useForm","register","handleSubmit","errors","formState","onSubmit","data","sendMessage","newMessageBody","sendWrapper","required","maxLength","value","placeholder","type","Dialogs","dialogItems","dialogsData","map","messageItems","messagesData","m","dialogs","messages","mapStateToProps","state","isAuth","auth","compose","connect","dialogsPage","dispatch","sendMessageAC","Component","restProps"],"mappings":"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","file":"static/js/6.7791e52f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Dialogs_avatar__38GWF\",\"dialogs\":\"Dialogs_dialogs__3S_Ff\",\"dialogItems\":\"Dialogs_dialogItems__1xD9i\",\"active\":\"Dialogs_active__2kycY\",\"dialog\":\"Dialogs_dialog__25ZYy\",\"messages\":\"Dialogs_messages__2KTCP\"};","export default __webpack_public_path__ + \"static/media/null-avatar-icon.6545822b.png\";","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from '../Dialogs.module.css'\r\nimport avatar from \"../../../../assets/img/null-avatar-icon.png\";\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <div className={s.avatar}>\r\n                <img src={avatar} alt=\"userAvatar\"/>\r\n            </div>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem   ","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {DialogsPropsType} from './DialogsContainer'\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\ntype PropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst DialogsForm: React.FC<PropsType> = (props) => {\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm<FormDataType>();\r\n    const onSubmit: SubmitHandler<FormDataType> = data => props.sendMessage(data.newMessageBody)\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={s.sendWrapper}>\r\n            <div>\r\n                <textarea\r\n                    {...register(\"newMessageBody\",\r\n                        {\r\n                            required: true,\r\n                            maxLength: {\r\n                                value: 10,\r\n                                message: 'max length 10'\r\n                            }\r\n                        })\r\n                    }\r\n                    placeholder='Enter message'/>\r\n                <input type=\"submit\" value={\"send\"}/>\r\n            </div>\r\n            {errors.newMessageBody?.type === \"required\" && <span>Field is required</span>}\r\n            {errors.newMessageBody?.message && <span>{errors.newMessageBody.message}</span>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let dialogItems = props.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n    let messageItems = props.messagesData.map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogItems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageItems}</div>\r\n                <DialogsForm sendMessage={props.sendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AppStateType} from '../Redux/store'\r\n\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToProps => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect<WrappedComponentPropsType>(Component: React.ComponentType<WrappedComponentPropsType>) {\r\n\r\n    const RedirectComponent: React.FC<MapStateToProps> = (props) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps as unknown as WrappedComponentPropsType}/>\r\n    }\r\n\r\n    return connect<MapStateToProps, {}, WrappedComponentPropsType, AppStateType>(mapStateToProps)(RedirectComponent)\r\n} // не работает со стрелочной функцией, as unknown - вроде можно не писать","import Dialogs from './Dialogs'\r\nimport {AppStateType} from '../../../Redux/store'\r\nimport {sendMessageAC, DialogType, MessageType} from '../../../Redux/dialogs-reducer'\r\nimport {compose, Dispatch} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {WithAuthRedirect} from '../../../hoc/withAuthRedirect'\r\nimport React from \"react\"\r\n\r\n// type DialogsPropsType = {\r\n//     store: AppStateType\r\n// }\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let localState = store.getState().dialogsPage\r\n//                     const sendMessage = () => {\r\n//                         store.dispatch(dialogsActions.sendMessageAC())\r\n//                     }\r\n//                     const changeMessage = (body: string) => {\r\n//                         store.dispatch(dialogsActions.changeMessageBodyAC(body))\r\n//                     }\r\n//                     return <Dialogs \r\n//                         sendMessage={sendMessage}\r\n//                         changeMessage={changeMessage}\r\n//                         dialogsData={localState.dialogsData}\r\n//                         messagesData={localState.messagesData}\r\n//                         newMessageBody={localState.newMessageBody} />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => (\r\n    {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData,\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => (\r\n    {\r\n        sendMessage: (newMessageBody: string) => dispatch(sendMessageAC(newMessageBody)),\r\n    }\r\n)\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\n//types\r\ntype mapStateToPropsType = {\r\n    dialogsData: DialogType[]\r\n    messagesData: MessageType[]\r\n}\r\ntype mapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType"],"sourceRoot":""}